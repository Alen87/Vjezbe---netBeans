/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package alen;

/**
 *
 * @author Alen
 */
public class CiklicnaTablica extends javax.swing.JFrame {

    /**
     * Creates new form CiklicnaTablica
     */
    public CiklicnaTablica() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Gumb = new javax.swing.JButton();
        txtRed = new javax.swing.JTextField();
        txtKolona = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        taRezultat = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Gumb.setText("Start");
        Gumb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GumbActionPerformed(evt);
            }
        });

        txtKolona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKolonaActionPerformed(evt);
            }
        });

        taRezultat.setColumns(20);
        taRezultat.setRows(5);
        jScrollPane1.setViewportView(taRezultat);

        jLabel1.setText("Red");

        jLabel2.setText("Kolona");

        jLabel3.setText("                      Ciklicna  Tablica");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRed)
                    .addComponent(txtKolona)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Gumb)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(44, 44, 44)))
                            .addComponent(jLabel2))
                        .addGap(0, 37, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addComponent(txtKolona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(Gumb)
                .addGap(105, 105, 105))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GumbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GumbActionPerformed
        
          int red = Integer.parseInt(txtRed.getText());
         int kolona =Integer.parseInt(txtKolona.getText()) ;
			
				
        StringBuilder ispis = new StringBuilder();
			

	    int matrica[][] = new int[red][kolona];

		int pocetak = 1;
		int minRed = 0;
		int maxRed = red - 1;
		int minKolona = 0;
		int maxKolona = kolona - 1;

		while (pocetak <= red * kolona) {

			for (int i = maxKolona; i >= minKolona; i--) {
				matrica[maxRed][i] = pocetak++;
			}

			for (int j = maxRed - 1; j >= minRed; j--) {
				matrica[j][minKolona] = pocetak++;
			}
			for (int i = minKolona + 1; i <= maxKolona; i++) {
				matrica[minRed][i] = pocetak++;
			}

			for (int j = minRed + 1; j <= maxRed - 1; j++) {
				matrica[j][maxKolona] = pocetak++;
			}

			maxKolona--;
			minKolona++;
			maxRed--;
			minRed++;
		}

		for (int i = 0; i < red; i++) {
                    ispis.append("\n");
                    
			for (int j = 0; j < kolona; j++) {
                                 
                                 ispis.append(String.format("%8d",matrica[i][j]));
                                 
				
			}
			
                          ispis.append("\n");
		}

            
            
          taRezultat.setText(ispis.toString());
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_GumbActionPerformed

    private void txtKolonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKolonaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKolonaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CiklicnaTablica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CiklicnaTablica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CiklicnaTablica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CiklicnaTablica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CiklicnaTablica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Gumb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea taRezultat;
    private javax.swing.JTextField txtKolona;
    private javax.swing.JTextField txtRed;
    // End of variables declaration//GEN-END:variables
}
